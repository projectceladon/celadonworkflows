name: Trigger all workflows
on:
  workflow_call:
    inputs:
      PR_EVENT:
        required: true
        type: string
      PR_URL:
        required: true
        type: string
      CHECKAPPROVALTOKEN:
        default: checkapproval
        required: false
        type: string
      CHECKBUGTOKEN:
        default: checkbug
        required: false
        type: string
    secrets:
      JENKINS_WEB_HOOK:
        required: true
      TOKEN_GITHUB:
        required: true      
jobs:
  CheckBug:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: echo vars
        run: 
            echo The PR_EVENT is ${{ inputs.PR_EVENT }}
            echo The PR_URL is ${{ inputs.PR_URL }}
            echo The TOKEN is ${{ inputs.CHECKBUGTOKEN }}
            
      - name: Trigger Jenkins Build with PR Information
        run: |-
              curl --location --request POST  ${{ secrets.JENKINS_WEB_HOOK }}${{ inputs.CHECKBUGTOKEN }}   \
                      --header 'Content-Type: application/json' \
                      --data-raw '{
                        "action": ${{ inputs.PR_EVENT }} ,
                        "pull_request": {
                          "html_url": ${{ inputs.PR_URL }}
                        }
                      }'
  CheckApproval:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: echo vars
        run: 
            echo The PR_EVENT is ${{ inputs.PR_EVENT }}
            echo The PR_URL is ${{ inputs.PR_URL }}
            echo The TOKEN is ${{ inputs.CHECKAPPROVALTOKEN }}
            
      - name: Trigger Jenkins Build with PR Information
        run: |-
              curl --location --request POST  ${{ secrets.JENKINS_WEB_HOOK }}${{ inputs.CHECKAPPROVALTOKEN }}   \
                      --header 'Content-Type: application/json' \
                      --data-raw '{
                        "action": ${{ inputs.PR_EVENT }} ,
                        "pull_request": {
                          "html_url": ${{ inputs.PR_URL }}
                        }
                      }'
  CheckLint:
    runs-on: linter
    steps:
      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0
      - name: Checkout repository
        uses: actions/checkout@v2       
      - name: Super-Linter
        id: linting
        uses: github/super-linter@v4.9.2
        env:      
          DEFAULT_BRANCH: master
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      - name: Label on failure
        if: ${{ failure() }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: |
            lintingfailed
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      - name: Comment on failure
        if: ${{ failure() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            Lint check failed
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      - name: Delete Existing Label
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.TOKEN_GITHUB }}
          labels: lintingfailed
      - name: Label on Success
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: LintCheckPassed
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      - name: Comment on Success
        uses: alawiii521/current-pr-comment@v1.0
        with:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          comment: "Lint Check Passed"

    
